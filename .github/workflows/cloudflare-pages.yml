name: Deploy Portofolio Next.js to Cloudflare Pages

on:
  push:
    branches:
      - main # Ini akan memicu workflow setiap push ke branch 'main'
  workflow_dispatch: # Memungkinkan Anda memicu deployment secara manual dari GitHub UI

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production # Opsional: Mengaitkan dengan environment GitHub, baik untuk visibility maupun secret management
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4 # Mengambil kode dari repositori GitHub

      - name: Setup pnpm
        uses: pnpm/action-setup@v3 # Mengatur pnpm
        with:
          version: 10 # Pastikan versi ini sesuai dengan versi pnpm Anda (10.x.x)

      - name: Setup Node.js
        uses: actions/setup-node@v4 # Mengatur lingkungan Node.js
        with:
          node-version: '20' # Pastikan versi ini sesuai dengan versi Node.js Anda (v20.x.x)
          cache: 'pnpm' # Mengaktifkan caching untuk pnpm dependencies agar build lebih cepat

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile # Menginstal semua dependensi proyek Anda

      # Menggunakan cloudflare/wrangler-action untuk menjalankan keseluruhan perintah 'deploy'
      # Ini akan menjalankan "pnpm pages:build && wrangler pages deploy"
      # dan secara otomatis meneruskan CLOUDFLARE_API_TOKEN dan CLOUDFLARE_ACCOUNT_ID
      - name: Run Full Cloudflare Pages Deployment
        uses: cloudflare/wrangler-action@v3 # Menggunakan GitHub Action resmi dari Cloudflare
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          # Kita akan menjalankan script 'deploy' penuh yang ada di package.json Anda
          # Script 'deploy' sudah memanggil 'pnpm pages:build' lalu 'wrangler pages deploy'
          command: pnpm pages:build && wrangler pages deploy
        env:
          NODE_ENV: production # Pastikan Next.js build berjalan dalam mode produksi

